{"version":3,"sources":["component/form/form.js","component/list/list.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","onSubmit","btn","type","onChange","inpt","List","state","isedit","rendercorus","data","name","onClick","togglestate","handeldelet","indx","setState","rendereditform","updatitem","ref","v","input","defaultValue","e","preventDefault","handeledit","value","this","Component","App","courses","current","handelinpt","currnt","target","handelbtn","currnts","push","index","aftrdel","splice","aftredit","rtndiv","map","itm","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAaeA,EAVF,SAACC,GACV,OACQ,uBAAMC,SAAUD,EAAME,IAAtB,UACI,uBAAOC,KAAK,OAAOC,SAAUJ,EAAMK,OAEnC,wBAAQF,KAAK,SAAb,4BCoDDG,E,4MAvDfC,MAAM,CACFC,QAAO,G,EAIXC,YAAc,WACV,OACI,+BACA,iCAAO,EAAKT,MAAMU,KAAKC,KAAvB,OACA,wBAASC,QAAS,kBAAM,EAAKC,eAA7B,mBACA,wBAAQD,QAAS,kBAAM,EAAKZ,MAAMc,YAAY,EAAKd,MAAMe,OAAzD,uB,EAORF,YAAa,WAEb,IAAKL,EAAU,EAAKD,MAAfC,OAED,EAAKQ,SAAS,CACVR,QAAQA,K,EAIhBS,eAAiB,WACb,OACI,uBAAMhB,SAAU,EAAKiB,UAArB,UACI,uBAAOC,IAAK,SAACC,GAAO,EAAKC,MAAQD,GAAIjB,KAAK,OAAOmB,aAAc,EAAKtB,MAAMU,KAAKC,OAC/E,gD,EAKZO,UAAY,SAACK,GACTA,EAAEC,iBACF,EAAKxB,MAAMyB,WAAW,EAAKzB,MAAMe,KAAK,EAAKM,MAAMK,OACjD,EAAKb,e,4CAKL,WACI,IAAKL,EAAUmB,KAAKpB,MAAfC,OACL,OACI,cAAC,WAAD,UACMA,EAASmB,KAAKV,iBAAmBU,KAAKlB,oB,GAjDrCmB,aCmFJC,E,4MA/EbtB,MAAM,CACJuB,QAAQ,CACN,CAACnB,KAAK,QACN,CAACA,KAAK,OACN,CAACA,KAAK,OAERoB,QAAQ,I,EAIVC,WAAa,SAACT,GACZ,EAAKP,SAAS,CACZiB,OAASV,EAAEW,OAAOR,S,EAMtBS,UAAY,SAACZ,GACXA,EAAEC,iBACF,IAAIY,EAAU,EAAK7B,MAAM0B,OACrBH,EAAU,EAAKvB,MAAMuB,QACzBA,EAAQO,KAAK,CAAC1B,KAAKyB,IACnB,EAAKpB,SAAS,CACZc,QAAQA,K,EAQZhB,YAAc,SAACwB,GACb,IAAIC,EAAU,EAAKhC,MAAMuB,QACzBS,EAAQC,OAAOF,EAAO,GAEtB,EAAKtB,SAAS,CACZc,QAASS,K,EAKbd,WAAa,SAACa,EAAMZ,GAClB,IAAIe,EAAW,EAAKlC,MAAMuB,QACfW,EAASH,GAChB,KAAWZ,EACf,EAAKV,SAAS,CACZc,QAAQW,K,4CAKd,WAAS,IAAD,OAIFC,EADYf,KAAKpB,MAAhBuB,QACgBa,KAAI,SAACC,EAAMN,GAChC,OAEK,cAAC,EAAD,CAAM5B,KAAMkC,EAAiB9B,YAAa,EAAKA,YAAaC,KAAMuB,EAAOb,WAAY,EAAKA,YAApEa,MAI3B,OACE,sBAAKO,UAAU,MAAf,qBAGE,cAAC,EAAD,CAAMxC,KAAMsB,KAAKK,WAAY9B,IAAKyB,KAAKQ,YACxC,6BACCO,W,GAvEYd,aCOHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0d57df0b.chunk.js","sourcesContent":["import React ,{Component} from \"react\";\r\n\r\n\r\nconst Form = (props) =>{\r\n    return(\r\n            <form onSubmit={props.btn}>\r\n                <input type=\"text\" onChange={props.inpt}/>\r\n\r\n                <button type=\"submit\" >Add Coures</button>\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default Form","import React ,{Component , Fragment} from \"react\";\r\n\r\n\r\nclass List extends Component{\r\n\r\nstate={\r\n    isedit:false\r\n}\r\n\r\n\r\nrendercorus = () =>{\r\n    return(\r\n        <li>\r\n        <span>{this.props.data.name} </span>\r\n        <button  onClick={() => this.togglestate()}>Edite</button>\r\n        <button onClick={() => this.props.handeldelet(this.props.indx)}>Delet</button>\r\n     </li>\r\n\r\n    )\r\n}\r\n\r\n\r\ntogglestate =()=>{\r\n\r\nlet {isedit} = this.state\r\n\r\n    this.setState({\r\n        isedit:!isedit\r\n    })\r\n}\r\n\r\nrendereditform = () =>{\r\n    return(\r\n        <form onSubmit={this.updatitem}>\r\n            <input ref={(v) => {this.input = v}} type=\"text\" defaultValue={this.props.data.name}/>\r\n            <button>Update</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nupdatitem = (e) => {\r\n    e.preventDefault();\r\n    this.props.handeledit(this.props.indx,this.input.value);\r\n    this.togglestate();\r\n\r\n\r\n}\r\n\r\n    render(){\r\n        let {isedit} = this.state\r\n        return(\r\n            <Fragment>\r\n                { isedit ? this.rendereditform() : this.rendercorus()}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default List","import { Component } from 'react';\nimport './App.css';\nimport Form from './component/form/form';\nimport List from './component/list/list';\n\nclass App extends Component {\n\n  state={\n    courses:[\n      {name:\"html\"},\n      {name:\"css\"},\n      {name:\"js\"},\n    ],\n    current:\"\"\n  }\n  \n\n  handelinpt = (e) =>{\n    this.setState({\n      currnt : e.target.value\n\n    })\n  }\n\n\n  handelbtn = (e) =>{\n    e.preventDefault();\n    let currnts = this.state.currnt\n    let courses = this.state.courses\n    courses.push({name:currnts})\n    this.setState({\n      courses:courses\n    })\n\n\n  }\n\n\n\n  handeldelet = (index) =>{\n    let aftrdel = this.state.courses\n    aftrdel.splice(index, 1)\n\n    this.setState({\n      courses :aftrdel\n    })\n\n  }\n\n  handeledit = (index,value) => {\n    let aftredit = this.state.courses\n    let edit = aftredit[index]\n    edit[\"name\"] = value\n    this.setState({\n      courses:aftredit\n    })\n\n  }\n\nrender(){\n\n\nconst {courses} = this.state;\nconst rtndiv = courses.map((itm , index) => {\n  return(\n  \n       <List data={itm} key={index} handeldelet={this.handeldelet} indx={index} handeledit={this.handeledit}/>\n\n  )\n})\n  return (\n    <div className=\"App\">\n\n      Hi react\n      <Form inpt={this.handelinpt} btn={this.handelbtn}/>\n     <ul>\n     {rtndiv}\n     </ul> \n\n\n    </div>\n  );\n\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}